/**
 * @file {@link http://xotic750.github.io/assert-x/ AstroDate}. A Javascript assertion library..
 * @version 0.0.4
 * @author Graham Fairweather <xotic750@gmail.com>
 * @copyright Copyright (c) 2013 Graham Fairweather
 * @license {@link <http://www.gnu.org/licenses/gpl-3.0.html> GPL3}
 * @module assert-x
 * @requires util-x
 */
!function(a){"use strict";function b(a){function b(c){var d;a.isPlainObject(c)||(c={}),a.isString(c.message)||(c.message=""),a.isString(c.operator)||(c.operator=""),a.isFunction(c.stackStartFunction)||(c.stackStartFunction=b),this.message=c.message,this.actual=c.actual,this.expected=c.expected,this.operator=c.operator,this.stackStartFunction=c.stackStartFunction,a.isFunction(Error.captureStackTrace)?Error.captureStackTrace(this,this.stackStartFunction):(d=Error.call(this),a.isString(d.stack)?this.stack=d.stack:a.isString(d.stacktrace)&&(this.stack=d.stacktrace))}function c(b,c){return a.isUndefined(c)||a.isFunction(c)||a.isRegExp(c)||a.isNumber(c)&&!a.numberIsFinite(c)?a.anyToString(c):c}function d(c,d){return a.isUndefinedOrNull(c)||a.isUndefinedOrNull(d)?!1:a.isRegExp(d)&&a.objectInstanceOf(c,Error)?d.test(b.errorToString(c)):a.objectInstanceOf(c,d)?!0:a.isFunction(d)&&a.isTrue(d.call({},c))?!0:!1}function e(c,d,f,g,h){throw a.isFunction(h)||(h=e),new b({message:f,actual:c,expected:d,operator:g,stackStartFunction:h})}function f(b,c,f,g,h){var i,j;a.isFunction(h)||(a.isFunction(g)?(h=g,g=a.privateUndefined):h=a.privateUndefined),a.isString(g)&&!a.isEmptyString(g)||!a.isString(f)||(g=f,f=null);try{c()}catch(k){j=k}if(i=d(j,f),g=(f&&a.isString(f.name)&&a.isEmptyString(f.name)?" ("+f.name+").":".")+(g?" "+g:"."),a.isTrue(b)&&!j&&e(j,f,"Missing expected exception"+g,a.privateUndefined,h),a.isFalse(b)&&a.isTrue(i)&&e(j,f,"Got unwanted exception"+g,a.privateUndefined,h),a.isTrue(b)&&j&&f&&a.isFalse(i)||a.isFalse(b)&&j)throw j}return a.inherits(b,Error),a.objectDefineProperty(b,"errorToString",{value:function(d){var e;return a.objectInstanceOf(d,Error)&&(a.isString(d.message)&&!a.isEmptyString(d.message)?e=d.name+": "+d.message:a.objectInstanceOf(d,b)&&(e=d.name+": ",e+=a.stringTruncate(a.jsonStringify(d.actual,c),128)+" ",e+=d.operator+" ",e+=a.stringTruncate(a.jsonStringify(d.expected,c),128))),e}}),a.objectDefineProperties(b.prototype,{constructor:{value:b},name:{value:"AssertionError"},toString:{value:function(){return b.errorToString(this)}}}),a.objectDefineProperties(e,{AssertionError:{value:b},fail:{value:function(a,b,c,d){e(a,b,c,"fail",d)}},ok:{value:function(b,c,d){var f=a.toBoolean(b);a.isFalse(f)&&e(f,!0,c,"ok",d)}},equal:{value:function(b,c,d,f){a.notEqual(b,c)&&e(b,c,d,"==",f)}},notEqual:{value:function(b,c,d,f){a.equal(b,c)&&e(b,c,d,"!=",f)}},deepEqual:{value:function(b,c,d,f){a.deepEqual(b,c)||e(b,c,d,"deepEqual",f)}},notDeepEqual:{value:function(b,c,d,f){a.deepEqual(b,c)&&e(b,c,d,"notDeepEqual",f)}},deepStrictEqual:{value:function(b,c,d,f){a.deepEqual(b,c,{strict:!0})||e(b,c,d,"deepStrictEqual",f)}},notDeepStrictEqual:{value:function(b,c,d,f){a.deepEqual(b,c,{strict:!0})&&e(b,c,d,"notDeepStrictEqual",f)}},strictEqual:{value:function(b,c,d,f){a.notStrictEqual(b,c)&&e(b,c,d,"===",f)}},notStrictEqual:{value:function(b,c,d,f){a.strictEqual(b,c)&&e(b,c,d,"!==",f)}},"throws":{value:function(a,b,c,d){f(!0,a,b,c,d)}},doesNotThrow:{value:function(a,b,c){f(!1,a,b,c)}},ifError:{value:function(a){if(a)throw a}}}),e}var c;if("object"!=typeof a&&null===a)throw new TypeError("Invalid global context");"object"==typeof module&&null!==module&&"object"==typeof module.exports&&null!==module.exports?(c=b(require("util-x")),c.factory=function(a){var d;return d=!0===a?b(require("util-x").factory()):b(require("util-x")),d.factory=c.factory,d},module.exports=c):"function"==typeof define&&"object"==typeof define.amd&&null!==define.amd?define(["util-x"],function(a){return c=b(a),c.factory=function(d){var e;return e=!0===d?b(a.factory()):b(a),e.factory=c.factory,e},c}):(c=b(a.utilx),c.factory=function(d){var e;return e=!0===d?b(a.utilx.factory()):b(a.utilx),e.factory=c.factory,e},a.assertx=c)}(this);