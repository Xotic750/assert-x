/**
 * @file {@link http://xotic750.github.io/assert-x/ AstroDate}. A Javascript assertion library..
 * @version 0.0.3
 * @author Graham Fairweather <xotic750@gmail.com>
 * @copyright Copyright (c) 2013 Graham Fairweather
 * @license {@link <http://www.gnu.org/licenses/gpl-3.0.html> GPL3}
 * @module assert-x
 * @requires util-x
 */
!function(a){"use strict";function b(a){function b(b,c){return a.isUndefined(c)||a.isFunction(c)||a.isRegExp(c)||a.isNumber(c)&&!a.numberIsFinite(c)?a.anyToString(c):c}function c(b){var d;a.isPlainObject(b)||(b={}),a.isString(b.message)||(b.message=""),a.isString(b.operator)||(b.operator=""),a.isFunction(b.stackStartFunction)||(b.stackStartFunction=c),this.message=b.message,this.actual=b.actual,this.expected=b.expected,this.operator=b.operator,this.stackStartFunction=b.stackStartFunction,a.isFunction(Error.captureStackTrace)?Error.captureStackTrace(this,this.stackStartFunction):(d=Error.call(this),a.isString(d.stack)?this.stack=d.stack:a.isString(d.stacktrace)&&(this.stack=d.stacktrace))}function d(b,c){return a.isUndefinedOrNull(b)||a.isUndefinedOrNull(c)?!1:a.isRegExp(c)?c.test(b.toString()):a.objectInstanceOf(b,c)?!0:a.isTrue(c.call({},b))?!0:!1}function e(b,d,f,g,h){throw a.isFunction(h)||(h=e),new c({message:f,actual:b,expected:d,operator:g,stackStartFunction:h})}function f(b,c,f,g,h){var i,j;a.isFunction(h)||(a.isFunction(g)?(h=g,g=a.privateUndefined):h=a.privateUndefined),a.isString(g)&&!a.isEmptyString(g)||!a.isString(f)||(g=f,f=null);try{c()}catch(k){j=k}if(i=d(j,f),g=(f&&a.isString(f.name)&&a.isEmptyString(f.name)?" ("+f.name+").":".")+(g?" "+g:"."),a.isTrue(b)&&!j&&e(j,f,"Missing expected exception"+g,a.privateUndefined,h),a.isFalse(b)&&a.isTrue(i)&&e(j,f,"Got unwanted exception"+g,a.privateUndefined,h),a.isTrue(b)&&j&&f&&a.isFalse(i)||a.isFalse(b)&&j)throw j}return a.inherits(c,Error),a.objectDefineProperties(c.prototype,{name:{value:"AssertionError"},toString:{value:function(){var c;return a.isString(this.message)&&!a.isEmptyString(this.message)?c=this.name+": "+this.message:(c=this.name+": ",c+=a.stringTruncate(a.jsonStringify(this.actual,b),128)+" ",c+=this.operator+" ",c+=a.stringTruncate(a.jsonStringify(this.expected,b),128)),c}}}),a.objectDefineProperties(e,{AssertionError:{value:c},fail:{value:function(a,b,c,d){e(a,b,c,"fail",d)}},ok:{value:function(b,c,d){var f=a.toBoolean(b);a.isFalse(f)&&e(f,!0,c,"ok",d)}},equal:{value:function(b,c,d,f){a.notEqual(b,c)&&e(b,c,d,"==",f)}},notEqual:{value:function(b,c,d,f){a.equal(b,c)&&e(b,c,d,"!=",f)}},deepEqual:{value:function(b,c,d,f){a.deepEqual(b,c)||e(b,c,d,"deepEqual",f)}},notDeepEqual:{value:function(b,c,d,f){a.deepEqual(b,c)&&e(b,c,d,"notDeepEqual",f)}},deepStrictEqual:{value:function(b,c,d,f){a.deepEqual(b,c,{strict:!0})||e(b,c,d,"deepStrictEqual",f)}},notDeepStrictEqual:{value:function(b,c,d,f){a.deepEqual(b,c,{strict:!0})&&e(b,c,d,"notDeepStrictEqual",f)}},strictEqual:{value:function(b,c,d,f){a.notStrictEqual(b,c)&&e(b,c,d,"===",f)}},notStrictEqual:{value:function(b,c,d,f){a.strictEqual(b,c)&&e(b,c,d,"!==",f)}},"throws":{value:function(a,b,c,d){f(!0,a,b,c,d)}},doesNotThrow:{value:function(a,b,c){f(!1,a,b,c)}},ifError:{value:function(a){if(a)throw a}}}),e}var c;if("object"!=typeof a&&null===a)throw new TypeError("Invalid global context");"object"==typeof module&&null!==module&&"object"==typeof module.exports&&null!==module.exports?(c=b(require("util-x")),c.factory=function(a){var d;return d=!0===a?b(require("util-x").factory()):b(require("util-x")),d.factory=c.factory,d},module.exports=c):"function"==typeof define&&"object"==typeof define.amd&&null!==define.amd?define(["util-x"],function(a){return c=b(a),c.factory=function(d){var e;return e=!0===d?b(a.factory()):b(a),e.factory=c.factory,e},c}):(c=b(a.utilx),c.factory=function(d){var e;return e=!0===d?b(a.utilx.factory()):b(a.utilx),e.factory=c.factory,e},a.assertx=c)}(this);